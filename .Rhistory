source("storm.r")
source("storm.r")
source("storm.r")
source("storm.r")
source("storm.r")
source("storm.r")
source("storm.r")
source("storm.r")
source("storm.r")
print(p2)
print(p1)
View(prop_dmg_events)
prop_dmg_events$p <-"hh"
View(prop_dmg_events)
View(prop_dmg_events)
View(prop_dmg_events)
View(prop_dmg_events)
View(crop_dmg_events)
View(prop_dmg_events)
source("storm.r")
View(prop_dmg_events)
source("storm.r")
View(crop_dmg_events)
#most_econ_dmg <- rbind(prop_dmg_events, crop_dmg_events)
source("storm.r")
barplot(prop_dmg_events$prop_dmg, names.arg=prop_dmg_events$EVTYPE, "Property Damage")
barplot(prop_dmg_events$crop_dmg, names.arg=prop_dmg_events$EVTYPE, "Crop Damage")
par(mfrow = c(1, 2))
barplot(prop_dmg_events$crop_dmg, names.arg=prop_dmg_events$EVTYPE, "Crop Damage")
View(prop_dmg_events)
View(crop_dmg_events)
barplot(prop_dmg_events$crop_dmg, names.arg=prop_dmg_events$EVTYPE, ylab="Crop Damage")
par(mfrow = c(1, 2), mar = c(10, 4, 0.5, 2.5), oma = c(1.5, 2, 1, 1))
barplot(prop_dmg_events$crop_dmg, names.arg=prop_dmg_events$EVTYPE, ylab="Crop Damage")
View(crop_dmg_events)
source("storm.r")
source("storm.r")
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE, las=1)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE, las=1)
par(mfrow = c(2, 1), mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE, las=1)
par(mfrow = c(2, 1), mar = c(1, 0, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE, las=1)
par(mfrow = c(2, 1), mar = c(5, 0, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE, las=1)
par(mfrow = c(2, 1), mar = c(0, 5, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", horiz=TRUE, las=1)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", horiz=TRUE, las=1)
par(mfrow = c(2, 1), mar = c(0, 6, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", horiz=TRUE, las=1)
par(mfrow = c(2, 1), mar = c(0, 7, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", las=1)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", las=2)
par(mfrow = c(1, 2), mar = c(7, 0, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", las=2)
par(mfrow = c(1, 2), mar = c(7, 5, 0, 0), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", las=2)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", las=2)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, ylab="Property Damage", las=2)
source("storm.r")
par(mfrow = c(1, 2), mar = c(7, 5, 2, 2), oma = c(0, 0, 0, 0))
source("storm.r")
par(mfrow = c(2, 1), mar = c(10, 5, 2, 2), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(7, 5, 2, 2), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, xlab="Property Damage", las=1, horiz=T)
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(7, 10, 1, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(7, 7, 1, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(7, 8, 1, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(7, 9, 1, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(0, 9, 1, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
par(mfrow = c(2, 1), mar = c(0, 9, 3, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, xlab="Crop Damage", las=2, , horiz=T)
par(mfrow = c(2, 1), mar = c(3, 9, 3, 1), oma = c(0, 0, 0, 0))
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, xlab="Crop Damage", las=2, , horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, mian="Crop Damage", las=2, , horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, , horiz=T)
par(mfrow = c(2, 1), mar = c(3, 9, 3, 1), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, , horiz=T)
par(mfrow = c(2, 1), mar = c(4, 8.5, 2, 0.5), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, , horiz=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE, main="Property Damage", las=1, horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, , horiz=T)
par(mfrow = c(2, 1), mar = c(7, 5, 2, 2), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
par(mfrow = c(2, 1), mar = c(4.5, 5, 2, 2), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
title(mian="xxx")
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
title(main="xxx")
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 0, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
title(main="xxx", outer=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 2, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
title(main="xxx", outer=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 2, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="yellow"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE, main="Crop Damage", las=2, col="green", horiz=T)
title(main="Eventa with the greatest economic consequences", outer=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 2, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="purple"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE
,main="Crop Damage"
,las=2
,col="green"
, horiz=T)
title(main="Events with the greatest economic consequences", outer=T)
par(mfrow=c(2,1))
par(mfrow = c(2, 1), mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(1, 2), mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(1, 2), mar = c(0, 5, 0, 5), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(1, 2), mar = c(0, 1, 0, 1), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(1, 2), mar = c(0, 2, 0, 2), oma = c(0, 0, 5, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(0, 2, 0, 2), oma = c(0, 0, 5, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(0, 2, 0, 2), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(0, 0, 20, 0), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(0, 0, 20, 0), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(0, 0, 2, 0), oma = c(0, 0, 0, 0))
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(0, 0, 2, 0), oma = c(0, 0, 0, 0), bg = "thistle")
pie(fatal_events$fatalities, main="Top 5 Most Fatal Events", labels=fatal_events$EVTYPE
,explode=0.1, col=c(2:6))
pie(injury_events$injuries, main="Top 5 Events Resulting in Injury", labels=injury_events$EVTYPE
,explode=0.1, col=c(7:12))
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 2, 0))
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="purple"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE
,main="Crop Damage"
,las=2
,col="green"
, horiz=T)
title(main="Events with the greatest economic consequences", outer=T)
par(mfrow = c(2, 1), mar = c(4.5, 8.5, 2, 0.5), oma = c(0, 0, 2, 0), bg="white")
barplot(log10(prop_dmg_events$prop_dmg), names.arg=prop_dmg_events$EVTYPE
,main="Property Damage"
,col="purple"
,las=1
,horiz=T)
barplot(crop_dmg_events$crop_dmg, names.arg=crop_dmg_events$EVTYPE
,main="Crop Damage"
,las=2
,col="green"
, horiz=T)
title(main="Events with the greatest economic consequences", outer=T)
source("storm.r")
?box
qnorm(0.95, 1100, 75)
pnorm(70, mean=80, sd=10)
qunif(0.75)
?unif
?qunif
pnorm(70, mean=80, sd = 10)
?qnorm
qnorm(0.95, mean=1100, sd=75/sqrt(100))
pbinom(3, size = 5, prob=0.5, lower.tail = F)
lower <- pnorm(16, mean=15,sd =1)
lower
upper <- pnorm(16, mean=15,sd =1)
upper
lower <- pnorm(14, mean=15,sd =1)
lower
upper-lower
pois(10, lamda = 5* 3 )
ppois(10, lamda = 5* 3 )
ppois(10, lambda = 5* 3 )
combn(1:9, 3)
ncol(combn(1:9, 3))
ncol(combn(1:30, 6))
ncol(perm(1:30, 6))
n=9
rm(list=ls())
closeAllConnections()
n=9
mu=1100
sd=30
quan=0.975
CI <- mu + c(-1, 1) * qt(quantile, df=n-1) * sd/sqrt(n)
CI <- mu + c(-1, 1) * qt(quan, df=n-1) * sd/sqrt(n)
ci
CI
n=9
avgDiff=-2
ci_up=0
sd=(ci_up-avgDiff * sqrt(n))/qt(quan, df=n-1)
sd
rm(list=ls())
closeAllConnections()
swirl()
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
swirl()
swirl()
closeAllConnections()
rm(list=ls())
getwd()
setwd("C:/Users/Justin/Desktop/Online Courses/Data Science Specialization/7 - Regression Models/wd")
setwd("C:/Users/Justin/Desktop/Online Courses/Data Science Specialization/7 - Regression Models/wd")
getwd()
data(mtcars)
View(mtcars)
x <-  summary(auto$mpg)
x <-  summary(mtcars$mpg)
names(x)
x$Min.
y <- as.data.frame(x)
library(plyr)
ddply(mtcars, "am", function(x), summary(x$mpg))
ddply(mtcars, "am", function(x) summary(x$mpg))
y <- ddply(mtcars, "am", function(x) summary(x$mpg))
y
y[1,]
y[1,1]
y[1,2]
kable(y)
library(gmodels)
kable(y)
?kable
??kable
library(knitr)
?kable
kable(y)
?boxplot
library(caret)
install.packages(caret)
install.packages("caret")
library(caret)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]training = adData[ inTrain,]
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
?caret
library(caret)
install.packages("pbkrtest")
install.packages("installr")
require(installr)
updateR()
library(caret)
library("pbkrtest")
install.packages("pbkrtest")
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
procPCA <-  preProcess(training[, ILpredictor], method = "pca", thresh = .8)
predName <- names(training)
(ILpredictor <- predName[substr(predName, 1, 2) == "IL"])
procPCA <-  preProcess(training[, ILpredictor], method = "pca", thresh = .8)
procPCA$numComp
rm(list=ls())
data(mtcars)
rm(list=ls())
d <- data(mtcars)
head(d)
head(mtcars)
rm(d)
e <- subset(mtcars, am=1)
e <- subset(mtcars, am=0)
e <- subset(mtcars, am==0)
summary(e$mpg)
table(mtcars$am)
?kable
library(knitr)
?kable
View(mtcars)
leveneTest(mpg~am)
install.packages("rcmdr")
install.packages("Rcmdr")
install.packages("Rcmdr")
library(Rcmdr)
library(Rcmdr)
leveneTest(mtcars)
leveneTest(mtcars$mpg~ mtcars$am)
ddply(car_data, "am", function(x) summary(x$mpg))
library(dplyr)
ddply(car_data, "am", function(x) summary(x$mpg))
library(plyr)
ddply(car_data, "am", function(x) summary(x$mpg))
ddply(mtcars, "am", function(x) summary(x$mpg))
e< - ddply(mtcars, "am", function(x) summary(x$mpg))
e <- ddply(mtcars, "am", function(x) summary(x$mpg))
data.frame(table(mtcars$am))
f <- data.frame(table(mtcars$am))
cbind,(e, f)
cbind(e, f)
cbind(e, f[, 1])
cbind(e, f[, 2])
f <- data.frame(table(mtcars$am))[, 2]
cbind(e, f)
cor(mtcars)
cor(mtcars)[1,]
y <- cor(mtcars)[1,]
f <- data.frame(y)
View(f)
y <- cor(mtcars)[,1]
f <- data.frame(y)
f <- data.frame(y)
?plot
am_fit <- lm(mpg ~ am, data = mtcars)
am_fit[1]
am_fit[10]
am_fit[11]
am_fit[11,1]
am_fit[2]
am_fit[3]
am_fit[4]
am_fit[5]
am_fit[6]
am_fit[7]
am_fit[8]
am_fit[9]
am_fit[10]
am_fit[11]
am_fit[12]
am_fit[13]
am_fit[1]
am_fit[2]
summary(am_fit)$r.squared
names(summary(am_fit))
summary(am_fit)$coefficients
?boxplot
?best.subjects
?best.subsets
??best.subsets
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
author("first_deck")
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='ricej2',
token='6F98758A0195DDA606963C14E568E9CA',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ricej2', token='6F98758A0195DDA606963C14E568E9CA', secret='S80pjBACj5kyKgEfUV1jgHLDtQK7TQeBub7O3fJ2')
library(rsconnect)
library(shiny)
runApp
getwd
getwd()
setwd("C:/Users/Justin/Desktop/Online Courses/Data Science Specialization/9 - Developing Data Products/wd")
runApp()
library(dplyr)
install.packages(DBI)
install.packages('DBI')
library(dplyr)
runApp()
?ddply
install.packages('plyr')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
rsconnect::setAccountInfo(name='ricej2', token='6F98758A0195DDA606963C14E568E9CA', secret='S80pjBACj5kyKgEfUV1jgHLDtQK7TQeBub7O3fJ2')
library(rsconnect)
deployApp()
runApp()
deployApp(appName = "UrbanPopulationGrowth")
deployApp(appName = "UrbanPopulationGrowth")
deployApp(appName = "UrbanPopulationGrowth")
deployApp(appName = "UrbanPopulationGrowth")
deployApp(appName = "UrbanPopulationGrowth")
deployApp(appName = "UrbanPopulationGrowth")
deployApp(appName = "UrbanPopulationGrowth")
runApp()
library(shiny)
runApp()
library(shiny)
library(shiny)
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='ricej2', token='6F98758A0195DDA606963C14E568E9CA', secret='S80pjBACj5kyKgEfUV1jgHLDtQK7TQeBub7O3fJ2')
deployApp(appName = "UrbanGrowth")
install.packages('slidify')
